@using JoinRpg.Web.App_Code
@model JoinRpg.Web.Models.AddClaimViewModel
@Scripts.Render("~/Scripts/claim.js")

@{
    ViewBag.Title = "Новая заявка на игру «" + @Model.ProjectName + "»";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Add", "Claim"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProjectId)

    <div class="form-horizontal">
        @if (!Model.IsAvailable)
        {
            <div class="alert alert-danger">Заявки не принимаются</div>
        }
        else if (Model.HasApprovedClaim)
        {
            <div class="alert alert-danger">У вас уже есть утвержденная заявка на проект. Невозможно иметь более одной утвержденной заявки</div>
        }
        else if (Model.HasMyClaim)
        {
            <div class="alert alert-danger">У вас уже есть заявка на эту роль. Невозможно отправить еще одну. </div>
        }
        else if (Model.HasAnyClaim)
        {
            <div class="alert alert-warning">У вас уже есть заявка на проект. Утверждена может быть только одна заявка</div>
        }

        @if (Model.ClaimApplyRules != null)
        {
            <div>@Model.ClaimApplyRules</div>
        }

        @if (Model.CharacterId != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TargetName, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.TargetName, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>

            @Html.HiddenFor(model => model.CharacterId)
        }

        @if (Model.CharacterGroupId != null)
        {
            if (!Model.IsRoot)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.TargetName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.TargetName, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
            }
            @Html.HiddenFor(model => model.CharacterGroupId)
        }

        @if (!string.IsNullOrWhiteSpace(Model.Description.ToHtmlString()))

        {
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DisplayFor(model => Model.Description)
                </div>
            </div>
        }

        @{ ViewBag.HideCharacterClaimFieldsIcon = true; }

        @Html.Partial("_EditFieldsPartial", Model.Fields)

        @if (Model.Fields.Fields.Any(f => f.HasPrice))
        {
            Html.RenderPartial("_ClaimFieldsSubtotal", 0);
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ClaimText, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClaimText, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ClaimText, "", new {@class = "text-danger"})
                @Html.DescriptionFor(model => model.ClaimText)
            </div>
        </div>

        @if (!Model.HasApprovedClaim && Model.IsAvailable && !Model.HasMyClaim)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Отправить заявку" class="btn btn-success"/>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
